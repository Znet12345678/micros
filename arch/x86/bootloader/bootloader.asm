;
;minOS/micros bootloader.asm
;(c)2016 Zachary James Schlotman
;This is the first stage bootloader
;This loads the second stage bootloader
;
[BITS 16]
[ORG 0x7C00]

start:
	mov ah,0x0e
	mov al,'m'
	int 0x10
	mov al,'i'
	int 0x10
	mov al,'n'
	int 0x10
	mov al,'O'
	int 0x10
	mov al,'S'
	int 0x10
	mov al,' '
	int 0x10
	mov al,'b'
	int 0x10
	mov al,'o'
	int 0x10
	int 0x10
	mov al,'t'
	int 0x10
	mov al,'l'
	int 0x10
	mov al,'o'
	int 0x10
	mov al,'a'
	int 0x10
	mov al,'d'
	int 0x10
	mov al,'e'
	int 0x10
	mov al,'r'
	int 0x10
	mov al,'.'
	int 0x10
	mov al,'b'
	int 0x10
	mov al,'i'
	int 0x10
	mov al,'n'
	int 0x10
	mov al,0x0a
	int 0x10
	mov ah,3
	mov bh,0
	int 0x10
	mov ah,2
	mov dl,0
	int 0x10
	JMP floppya_SUCC1
floppya_SUCC1:
	;mov 0x0FF,0x00
	mov ah,0x0e
	mov al,'F'
	int 0x10
	mov al,'D'
	int 0x10
	mov al,'A'
	int 0x10
	mov al,'-'
	int 0x10
	xor si,si
	xor ah,ah
	xor dl,dl
	mov ah,0x02
	mov al,4
	mov ch,0
	mov cl,2
	mov dh,0
	mov dl,0x00
	mov bx,0x600
	int 0x13
	cmp ah,0
	JZ SUCC2
	;mov 0x0FF,0x01
	mov ah,0x0e
	mov al,'F'
	int 0x10
	mov al,0x0a
	int 0x10
	mov ah,3
	mov bh,0
	int 0x10
	mov ah,2
	mov dl,0
	int 0x10
	JMP floppyb_SUCC1
floppyb_SUCC1:	mov ah,0x0e
	mov al,'F'
	int 0x10
	mov al,'D'
	int 0x10
	mov al,'B'
	int 0x10
	mov al,'-'
	int 0x10
	xor si,si
        xor ah,ah
        xor dl,dl
        mov ah,0x02
        mov al,4
        mov ch,0
        mov cl,2
        mov dh,0
        mov dl,0x01
        mov bx,0x600
        int 0x13
	cmp ah,0
        JZ SUCC2
	;mov [0x0FF],0x80
	mov al,'F'
	mov ah,0x0e
	int 0x10
	mov al,0x0a
	int 0x10
	mov ah,3
	mov bh,0
	int 0x10
	mov ah,2
	mov dl,0
	int 0x10
	JMP hda_SUCC1
hda_SUCC1:mov ah,0x0e
	mov al,'H'
	int 0x10
	mov al,'D'
	int 0x10
	mov al,'A'
	int 0x10
	mov al,'-'
	int 0x10
	xor si,si
        xor ah,ah
        xor dl,dl
        mov ah,0x02
        mov al,4
        mov ch,0
        mov cl,2
        mov dh,0
        mov dl,0x80
        mov bx,0x600
        int 0x13
	cmp ah,0
        JZ SUCC2
	;mov 0x0FF,0x81
	mov ah,0x0e
	mov al,'F'
	int 0x10
	mov al,0x0a
	int 0x10
	mov ah,3
	mov bh,0
	int 0x10
	mov ah,2
	mov dl,0
	int 0x10
	JMP hdb_SUCC1
hdb_SUCC1:mov ah,0x0e
	mov al,'H'
	int 0x10
	mov al,'D'
	int 0x10
	mov al,'B'
	int 0x10
	mov al,'-'
	int 0x10
	xor si,si
        xor ah,ah
        xor dl,dl
        mov ah,0x02
        mov al,4
        mov ch,0
        mov cl,2
        mov dh,0
        mov dl,0x81
        mov bx,0x600
        int 0x13
	cmp ah,0
	JZ SUCC2
	mov ah,0x0e
	mov al,'F'
	int 0x10
	mov al,0x0a
	int 0x10
	mov ah,3
	mov bh,0
	int 0x10
	mov ah,2
	mov dl,0
	int 0x10
	JMP hang
SUCC2:
	;mov dl,0x0FF
	;cmp dl,0x0FF
	;JZ hang
	mov ah,0x0e
	mov al,'S'
	int 0x10
	mov al,'['
	int 0x10
	mov al,'O'
	int 0x10
	mov al,'K'
	int 0x10
	mov al,']'
	int 0x10
	mov al,'R'
	int 0x10
	mov al,'E'
	int 0x10
	mov al,'A'
	int 0x10
	mov al,'D'
	int 0x10
	mov al,0x0a
	int 0x10
	mov ah,3
	mov bh,0
	int 0x10
	mov ah,2
	mov dl,0
	int 0x10

	JMP 0x600
pre_hang: JMP hang
hang:	mov ah,0x0e
	int 0x10
	mov al,'E'
	int 0x10
	mov al,'r'
	int 0x10
	int 0x10
	mov al,'o'
	int 0x10
	mov al,'r'
	int 0x10
	mov al,0x0a
	int 0x10
	mov ah,3
	mov bh,0
	int 0x10
	mov ah,2
	mov dl,0
	int 0x10
	JMP _hang
_hang:
	JMP _hang
end:
times 510 - ($ - $$) db 0
dw 0xAA55
