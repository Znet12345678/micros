;
;stage2 bootloader
;(c) 2016 Zachary James Schlotman
;minOS
;
[BITS 16]
welcome:mov ah,0x0e
	mov al,'S'
	int 0x10
	mov al,'t'
	int 0x10
	mov al,'a'
	int 0x10
	mov al,'g'
	int 0x10
	mov al,'e'
	int 0x10
	mov al,' '
	int 0x10
	mov al,'2'
	int 0x10
	mov al,'-'
	int 0x10
	mov al,'S'
	int 0x10
	mov al,'t'
	int 0x10
	mov al,'a'
	int 0x10
	mov al,'r'
	int 0x10
	mov al,'t'
	int 0x10
	mov al,0x0a
	int 0x10
        mov ah,3
        mov bh,0
        int 0x10
        mov ah,2
        mov dl,0
        int 0x10
read_1_fda:mov ah,0x0e
	mov al,'['
	int 0x10
	mov al,'F'
	int 0x10
	mov al,'D'
	int 0x10
	mov al,'A'
	int 0x10
	mov al,']'
	int 0x10
	xor al,al
	xor ah,ah
	xor ch,ch
	xor cl,cl
	xor dh,dh
	xor dl,dl
	mov ah,0x02
	mov ch,0
	mov cl,6
	mov dh,0
	mov dl,0x00
	mov bx,0x200
	int 0x13
	cmp ah,0
	JZ parse_elf
	JMP read_1_fdb
read_1_fdb:mov al,'F'
	mov ah,0x0e
	int 0x10
	mov al,'a'
	int 0x10
	mov al,'i'
	int 0x10
	mov al,'l'
	int 0x10
	mov al,'e'
	int 0x10
	mov al,'d'
	int 0x10
	mov al,0x0a
	int 0x10
	mov ah,3
	mov bh,0
	int 0x10
	mov ah,2
	mov dl,0
	int 0x10
	mov al,'['
	mov ah,0x0e
	int 0x10
	mov al,'F'
	int 0x10
	mov al,'D'
	int 0x10
	mov al,'B'
	int 0x10
	mov al,']'
	int 0x10
	int 0x10
	xor ah,ah
	xor ch,ch
	xor cl,cl
	xor dh,dh
	xor dl,dl
	mov ah,0x02
	mov ch,0
	mov cl,6
	mov dh,0
	mov dl,0x01
	mov bx,0x200
	mov dl,0x01
	int 0x13
	cmp ah,0
	JZ parse_elf
	JMP read_1_hda
read_1_hda:mov al,'F'
        mov ah,0x0e
        int 0x10
        mov al,'a'
        int 0x10
        mov al,'i'
        int 0x10
        mov al,'l'
        int 0x10
        mov al,'e'
        int 0x10
        mov al,'d'
        int 0x10
        mov al,0x0a
        int 0x10
        mov ah,3
        mov bh,0
        int 0x10
        mov ah,2
        mov dl,0
	int 0x10
	mov ah,0x0e
        mov al,'['
        int 0x10
        mov al,'H'
        int 0x10
        mov al,'D'
        int 0x10
        mov al,'A'
        int 0x10
        mov al,']'
        int 0x10
        xor al,al
	xor ah,ah
	xor ch,ch
	xor cl,cl
	xor dh,dh
	xor dl,dl
        mov ah,0x02
        mov ch,0
        mov cl,6
        mov dh,0
        mov dl,0x80
        mov bx,0x200
        int 0x13
        cmp ah,0
        JZ parse_elf
        JMP read_1_hdb
read_1_hdb:mov al,'F'
        mov ah,0x0e
        int 0x10
        mov al,'a'
        int 0x10
        mov al,'i'
        int 0x10
        mov al,'l'
        int 0x10
        mov al,'e'
        int 0x10
        mov al,'d'
        int 0x10
        mov al,0x0a
        int 0x10
        mov ah,3
        mov bh,0
        int 0x10
        mov ah,2
        mov dl,0
	int 0x10
	mov ah,0x0e
        mov al,'['
        int 0x10
        mov al,'H'
        int 0x10
        mov al,'D'
        int 0x10
        mov al,'B'
        int 0x10
        mov al,']'
        int 0x10
        xor al,al
	xor ah,ah
	xor ch,ch
	xor cl,cl
	xor dh,dh
	xor dl,dl
        mov ah,0x02
        mov ch,0
        mov cl,6
        mov dh,0
        mov dl,0x81
        mov bx,0x200
        int 0x13
        cmp ah,0
        JZ parse_elf
	mov al,'F'
        mov ah,0x0e
        int 0x10
        mov al,'a'
        int 0x10
        mov al,'i'
        int 0x10
        mov al,'l'
        int 0x10
        mov al,'e'
        int 0x10
        mov al,'d'
        int 0x10
        mov al,0x0a
        int 0x10
        mov ah,3
        mov bh,0
        int 0x10
        mov ah,2
        mov dl,0
	int 0x10
        JMP error
parse_elf:
	mov al,'S'
	mov ah,0x0e
	int 0x10
	mov al,'u'
	int 0x10
	mov al,'c'
	int 0x10
	int 0x10
	mov al,'e'
	int 0x10
	mov al,'s'
	int 0x10
	int 0x10
	mov al,0x0a
	int 0x10
	mov ah,3
	mov bh,0
	int 0x10
	mov ah,2
	mov dl,0
	int 0x10
	xor ah,ah
	xor dl,dl
	xor al,al
	mov ah,0x0e
	mov al,'P'
	int 0x10
	mov al,'a'
	int 0x10
	mov al,'r'
	int 0x10
	mov al,'s'
	int 0x10
	mov al,'i'
	int 0x10
	mov al,'n'
	int 0x10
	mov al,'g'
	int 0x10
	mov al,' '
	int 0x10
	mov al,'E'
	int 0x10
	mov al,'L'
	int 0x10
	mov al,'F'
	int 0x10
	mov al,0x0a
	int 0x10
        mov ah,3
        mov bh,0
        int 0x10
        mov ah,2
        mov dl,0
        int 0x10
	JMP hang
error:
	mov ah,0x0e
	mov al,'E'
	int 0x10
	mov al,'R'
	int 0x10
	int 0x10
	mov al,'O'
	int 0x10
	mov al,'R'
	int 0x10
	JMP hang
hang:
	JMP hang
